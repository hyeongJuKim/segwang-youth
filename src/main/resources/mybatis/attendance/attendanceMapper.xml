<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.segwang_youth.attendance.dao.AttendanceMapper">

    <select id="villageSeqList" parameterType="hashMap" resultType="java.util.Map">
        SELECT VILLAGE_SEQ
             , CONCAT(VILLAGE_NAME,'마을') AS VILLAGE_NAME
          FROM VILLAGE
        ORDER BY VILLAGE_SEQ ASC
    </select>

        <select id="villageMemberCount" parameterType="hashMap" resultType="java.util.Map">
        SELECT VILLAGE_COUNT
             , TOTAL_COUNT
          FROM (SELECT COUNT(M.MEMBER_NAME) AS VILLAGE_COUNT
                  FROM ATTENDANCE A, MEMBER M,VILLAGE V
                 WHERE A.ATTENDANCE_YN ='Y'
                   AND V.VILLAGE_SEQ = #{villageSeq}
                   AND A.MEMBER_SEQ = M.MEMBER_SEQ
                   AND V.VILLAGE_SEQ = M.VILLAGE_SEQ
                   AND A.ATTENDANCE_DATE = #{attendanceDate}) A,
               (SELECT COUNT(M.MEMBER_NAME) AS TOTAL_COUNT
                  FROM ATTENDANCE A, MEMBER M,VILLAGE V
                 WHERE A.ATTENDANCE_YN ='Y'
                   AND A.MEMBER_SEQ = M.MEMBER_SEQ
                   AND V.VILLAGE_SEQ = M.VILLAGE_SEQ
                   AND A.ATTENDANCE_DATE = #{attendanceDate}) B
    </select>

    <select id="attendance" parameterType="hashMap" resultType="hashMap">
        SELECT M.MEMBER_SEQ,
               M.MEMBER_NAME,
               M.MEMBER_BIRTHDAY,
               A.ATTENDANCE_YN,
               CONCAT(V.VILLAGE_NAME, '마을') AS VILLAGE_NAME
          FROM MEMBER M
        INNER JOIN (SELECT VILLAGE_SEQ,VILLAGE_NAME
        FROM VILLAGE
        WHERE VILLAGE_SEQ = #{villageSeq}) V ON M.VILLAGE_SEQ = V.VILLAGE_SEQ
        LEFT OUTER JOIN  (SELECT MEMBER_SEQ, ATTENDANCE_YN
                            FROM ATTENDANCE
                           WHERE ATTENDANCE_DATE = #{attendanceDate}) A
        ON M.MEMBER_SEQ = A.MEMBER_SEQ
        WHERE M.MEMBER_POSITION = '02'

          AND M.REGIST_TS <![CDATA[ <= ]]> #{attendanceDate}
        UNION
        SELECT *
         FROM (
                SELECT M.MEMBER_SEQ,
                       M.MEMBER_NAME,
                       M.MEMBER_BIRTHDAY,
                       A.ATTENDANCE_YN,
                       CONCAT(V.VILLAGE_NAME, '마을') AS VILLAGE_NAME
                  FROM MEMBER M
                INNER JOIN (SELECT VILLAGE_SEQ, VILLAGE_NAME
                              FROM VILLAGE
                              WHERE VILLAGE_SEQ = #{villageSeq}) V ON M.VILLAGE_SEQ = V.VILLAGE_SEQ
                LEFT OUTER JOIN  (SELECT MEMBER_SEQ, ATTENDANCE_YN
                FROM ATTENDANCE
                WHERE ATTENDANCE_DATE = #{attendanceDate}) A
                ON M.MEMBER_SEQ = A.MEMBER_SEQ
                WHERE M.MEMBER_POSITION != '02'
                  AND M.REGIST_TS <![CDATA[ <= ]]> #{attendanceDate}
                ORDER BY M.MEMBER_NAME ASC
            ) MEM
    </select>



    <!--<select id="check" parameterType="hashMap" resultType="int">-->
        <!--SELECT count(ATTENDANCE_DATE)-->
          <!--FROM ATTENDANCE-->
         <!--WHERE ATTENDANCE_DATE = #{attendanceDate}-->
           <!--AND MEMBER_SEQ = #{memberSeq}-->
    <!--</select>-->

    <insert id ="insertAttendanceMember" parameterType="java.util.Map">
        INSERT INTO ATTENDANCE(
          ATTENDANCE_DATE,
          MEMBER_SEQ,
          ATTENDANCE_YN
        ) VALUE (
          #{attendanceDate},
          #{memberSeq},
          'Y'
        )
    </insert>

    <delete id="deleteAttendanceMember" parameterType="java.util.Map">
        DELETE FROM ATTENDANCE
        WHERE ATTENDANCE_DATE = #{attendanceDate}
          AND MEMBER_SEQ = #{memberSeq}
    </delete>





</mapper>